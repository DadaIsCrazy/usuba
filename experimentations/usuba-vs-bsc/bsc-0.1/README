This is the version 0.1 of the Bitslice Compiler ((c) Thomas Pornin 1998)

This code may be distributed under the General Public License
(see http://www.fsf.org/copyleft/gpl.html). Basically, you may
copy and use this software as much as you want, but you may not
remove the GPL from any part of it.

The C code produced by bsc has no legal restriction.


INSTALLATION
============

Edit the Makefile to suit your system. Then type "make". This should
produce a binary named "bsc".

There is no "make install" thing for the moment.

The C code produced by bsc is intended to be used with the files bsc.h
and orth.c, although you may do without it (you will have to define your
own bsc_u integer type).


PRESENTATION
============

Bitslicing, also called orthogonal coding, is a technique for
implementing some algorithms efficiently. These algorithms are those
which might be calculated by a feedback-free hardware circuit. The basic
idea is to spread data among many cpu registers: each register will
take one bit of the data. The full algorithm is then implemented as a
combinatorial logic. If we have 64 bits registers, we can perform 64
calculations in parallel (one with the bits 0, another with the bits 1,
and so on).

Using bitslicing, bit permutations are free, but lookup-tables become
rather expensive. Moreover, the conversion of data from and into the
orthogonal representation might also be expensive if it is not done the
right way.

Handwriting orthogonal code is a painful coding exercise; bsc is a tool
to produce such code automatically, from a C-like, intuitive description
of the algorithm.

This techniques has been known for a long time, but not widely
published; therefore, it has been rediscovered several times by
different people. Paternity is shared.


USAGE AND SYNTAX
================

See the man page; it is provided in nroff and ascii formats.


FILES
=====

The source files for bsc are:
Makefile 	dump.c		dump.h		hash.c		hash.h
lexer.c		lexer.h		lut.c		lut.h		main.c
mem.c		mem.h		opt.c		opt.h		parse.h
parse.y		syntax.c	syntax.h	types.h

The following files are also provided:
README		This file
bsc.h		Header file that defines the bsc_u integer type
orth.c		Functions for moving data from and into orthogonal space
des.b		Example of bsc code (implementation of DES)
bsc.1		Man page for bsc (in nroff), explaining options and syntax
bsc.txt		Ascii version of bsc.1
