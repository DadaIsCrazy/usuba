node sbox_1 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a4);
	x2 = not(a1);
	x3 = xor(a4,a3);
	x4 = xor(x3,x2);
	x5 = or(a3,x2);
	x6 = and(x5,x1);
	x7 = or(a6,x6);
	x8 = xor(x4,x7);
	x9 = or(x1,x2);
	x10 = and(a6,x9);
	x11 = xor(x7,x10);
	x12 = or(a2,x11);
	x13 = xor(x8,x12);
	x14 = xor(x9,x13);
	x15 = or(a6,x14);
	x16 = xor(x1,x15);
	x17 = not(x14);
	x18 = and(x17,x3);
	x19 = or(a2,x18);
	x20 = xor(x16,x19);
	x21 = or(a5,x20);
	x22 = xor(x13,x21);
	out4 = x22;
	x23 = or(a3,x4);
	x24 = not(x23);
	x25 = or(a6,x24);
	x26 = xor(x6,x25);
	x27 = and(x1,x8);
	x28 = or(a2,x27);
	x29 = xor(x26,x28);
	x30 = or(x1,x8);
	x31 = xor(x30,x6);
	x32 = and(x5,x14);
	x33 = xor(x32,x8);
	x34 = and(a2,x33);
	x35 = xor(x31,x34);
	x36 = or(a5,x35);
	x37 = xor(x29,x36);
	out1 = x37;
	x38 = and(a3,x10);
	x39 = or(x38,x4);
	x40 = and(a3,x33);
	x41 = xor(x40,x25);
	x42 = or(a2,x41);
	x43 = xor(x39,x42);
	x44 = or(a3,x26);
	x45 = xor(x44,x14);
	x46 = or(a1,x8);
	x47 = xor(x46,x20);
	x48 = or(a2,x47);
	x49 = xor(x45,x48);
	x50 = and(a5,x49);
	x51 = xor(x43,x50);
	out2 = x51;
	x52 = xor(x8,x40);
	x53 = xor(a3,x11);
	x54 = and(x53,x5);
	x55 = or(a2,x54);
	x56 = xor(x52,x55);
	x57 = or(a6,x4);
	x58 = xor(x57,x38);
	x59 = and(x13,x56);
	x60 = and(a2,x59);
	x61 = xor(x58,x60);
	x62 = and(a5,x61);
	x63 = xor(x56,x62);
	out3 = x63
tel

node sbox_2 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a5);
	x2 = not(a1);
	x3 = xor(a5,a6);
	x4 = xor(x3,x2);
	x5 = xor(x4,a2);
	x6 = or(a6,x1);
	x7 = or(x6,x2);
	x8 = and(a2,x7);
	x9 = xor(a6,x8);
	x10 = and(a3,x9);
	x11 = xor(x5,x10);
	x12 = and(a2,x9);
	x13 = xor(a5,x6);
	x14 = or(a3,x13);
	x15 = xor(x12,x14);
	x16 = and(a4,x15);
	x17 = xor(x11,x16);
	out2 = x17;
	x18 = or(a5,a1);
	x19 = or(a6,x18);
	x20 = xor(x13,x19);
	x21 = xor(x20,a2);
	x22 = or(a6,x4);
	x23 = and(x22,x17);
	x24 = or(a3,x23);
	x25 = xor(x21,x24);
	x26 = or(a6,x2);
	x27 = and(a5,x2);
	x28 = or(a2,x27);
	x29 = xor(x26,x28);
	x30 = xor(x3,x27);
	x31 = xor(x2,x19);
	x32 = and(a2,x31);
	x33 = xor(x30,x32);
	x34 = and(a3,x33);
	x35 = xor(x29,x34);
	x36 = or(a4,x35);
	x37 = xor(x25,x36);
	out3 = x37;
	x38 = and(x21,x32);
	x39 = xor(x38,x5);
	x40 = or(a1,x15);
	x41 = xor(x40,x13);
	x42 = or(a3,x41);
	x43 = xor(x39,x42);
	x44 = or(x28,x41);
	x45 = and(a4,x44);
	x46 = xor(x43,x45);
	out1 = x46;
	x47 = and(x19,x21);
	x48 = xor(x47,x26);
	x49 = and(a2,x33);
	x50 = xor(x49,x21);
	x51 = and(a3,x50);
	x52 = xor(x48,x51);
	x53 = and(x18,x28);
	x54 = and(x53,x50);
	x55 = or(a4,x54);
	x56 = xor(x52,x55);
	out4 = x56
tel

node sbox_3 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a5);
	x2 = not(a6);
	x3 = and(a5,a3);
	x4 = xor(x3,a6);
	x5 = and(a4,x1);
	x6 = xor(x4,x5);
	x7 = xor(x6,a2);
	x8 = and(a3,x1);
	x9 = xor(a5,x2);
	x10 = or(a4,x9);
	x11 = xor(x8,x10);
	x12 = and(x7,x11);
	x13 = xor(a5,x11);
	x14 = or(x13,x7);
	x15 = and(a4,x14);
	x16 = xor(x12,x15);
	x17 = and(a2,x16);
	x18 = xor(x11,x17);
	x19 = and(a1,x18);
	x20 = xor(x7,x19);
	out4 = x20;
	x21 = xor(a3,a4);
	x22 = xor(x21,x9);
	x23 = or(x2,x4);
	x24 = xor(x23,x8);
	x25 = or(a2,x24);
	x26 = xor(x22,x25);
	x27 = xor(a6,x23);
	x28 = or(x27,a4);
	x29 = xor(a3,x15);
	x30 = or(x29,x5);
	x31 = or(a2,x30);
	x32 = xor(x28,x31);
	x33 = or(a1,x32);
	x34 = xor(x26,x33);
	out1 = x34;
	x35 = xor(a3,x9);
	x36 = or(x35,x5);
	x37 = or(x4,x29);
	x38 = xor(x37,a4);
	x39 = or(a2,x38);
	x40 = xor(x36,x39);
	x41 = and(a6,x11);
	x42 = or(x41,x6);
	x43 = xor(x34,x38);
	x44 = xor(x43,x41);
	x45 = and(a2,x44);
	x46 = xor(x42,x45);
	x47 = or(a1,x46);
	x48 = xor(x40,x47);
	out3 = x48;
	x49 = or(x2,x38);
	x50 = xor(x49,x13);
	x51 = xor(x27,x28);
	x52 = or(a2,x51);
	x53 = xor(x50,x52);
	x54 = and(x12,x23);
	x55 = and(x54,x52);
	x56 = or(a1,x55);
	x57 = xor(x53,x56);
	out2 = x57
tel

node sbox_4 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a1);
	x2 = not(a3);
	x3 = or(a1,a3);
	x4 = and(a5,x3);
	x5 = xor(x1,x4);
	x6 = or(a2,a3);
	x7 = xor(x5,x6);
	x8 = and(a1,a5);
	x9 = xor(x8,x3);
	x10 = and(a2,x9);
	x11 = xor(a5,x10);
	x12 = and(a4,x11);
	x13 = xor(x7,x12);
	x14 = xor(x2,x4);
	x15 = and(a2,x14);
	x16 = xor(x9,x15);
	x17 = and(x5,x14);
	x18 = xor(a5,x2);
	x19 = or(a2,x18);
	x20 = xor(x17,x19);
	x21 = or(a4,x20);
	x22 = xor(x16,x21);
	x23 = and(a6,x22);
	x24 = xor(x13,x23);
	out2 = x24;
	x25 = not(x13);
	x26 = or(a6,x22);
	x27 = xor(x25,x26);
	out1 = x27;
	x28 = and(a2,x11);
	x29 = xor(x28,x17);
	x30 = xor(a3,x10);
	x31 = xor(x30,x19);
	x32 = and(a4,x31);
	x33 = xor(x29,x32);
	x34 = xor(x25,x33);
	x35 = and(a2,x34);
	x36 = xor(x24,x35);
	x37 = or(a4,x34);
	x38 = xor(x36,x37);
	x39 = and(a6,x38);
	x40 = xor(x33,x39);
	out4 = x40;
	x41 = xor(x26,x38);
	x42 = xor(x41,x40);
	out3 = x42
tel


node sbox_5 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    	x1 = not(a6);
	x2 = not(a3);
	x3 = or(x1,x2);
	x4 = xor(x3,a4);
	x5 = and(a1,x3);
	x6 = xor(x4,x5);
	x7 = or(a6,a4);
	x8 = xor(x7,a3);
	x9 = or(a3,x7);
	x10 = or(a1,x9);
	x11 = xor(x8,x10);
	x12 = and(a5,x11);
	x13 = xor(x6,x12);
	x14 = not(x4);
	x15 = and(x14,a6);
	x16 = or(a1,x15);
	x17 = xor(x8,x16);
	x18 = or(a5,x17);
	x19 = xor(x10,x18);
	x20 = or(a2,x19);
	x21 = xor(x13,x20);
	out3 = x21;
	x22 = or(x2,x15);
	x23 = xor(x22,a6);
	x24 = xor(a4,x22);
	x25 = and(a1,x24);
	x26 = xor(x23,x25);
	x27 = xor(a1,x11);
	x28 = and(x27,x22);
	x29 = or(a5,x28);
	x30 = xor(x26,x29);
	x31 = or(a4,x27);
	x32 = not(x31);
	x33 = or(a2,x32);
	x34 = xor(x30,x33);
	out2 = x34;
	x35 = xor(x2,x15);
	x36 = and(a1,x35);
	x37 = xor(x14,x36);
	x38 = xor(x5,x7);
	x39 = and(x38,x34);
	x40 = or(a5,x39);
	x41 = xor(x37,x40);
	x42 = xor(x2,x5);
	x43 = and(x42,x16);
	x44 = and(x4,x27);
	x45 = and(a5,x44);
	x46 = xor(x43,x45);
	x47 = or(a2,x46);
	x48 = xor(x41,x47);
	out1 = x48;
	x49 = and(x24,x48);
	x50 = xor(x49,x5);
	x51 = xor(x11,x30);
	x52 = or(x51,x50);
	x53 = and(a5,x52);
	x54 = xor(x50,x53);
	x55 = xor(x14,x19);
	x56 = xor(x55,x34);
	x57 = xor(x4,x16);
	x58 = and(x57,x30);
	x59 = and(a5,x58);
	x60 = xor(x56,x59);
	x61 = or(a2,x60);
	x62 = xor(x54,x61);
	out4 = x62
tel

node sbox_6 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a2);
	x2 = not(a5);
	x3 = xor(a2,a6);
	x4 = xor(x3,x2);
	x5 = xor(x4,a1);
	x6 = and(a5,a6);
	x7 = or(x6,x1);
	x8 = and(a5,x5);
	x9 = and(a1,x8);
	x10 = xor(x7,x9);
	x11 = and(a4,x10);
	x12 = xor(x5,x11);
	x13 = xor(a6,x10);
	x14 = and(x13,a1);
	x15 = and(a2,a6);
	x16 = xor(x15,a5);
	x17 = and(a1,x16);
	x18 = xor(x2,x17);
	x19 = or(a4,x18);
	x20 = xor(x14,x19);
	x21 = and(a3,x20);
	x22 = xor(x12,x21);
	out2 = x22;
	x23 = xor(a6,x18);
	x24 = and(a1,x23);
	x25 = xor(a5,x24);
	x26 = xor(a2,x17);
	x27 = or(x26,x6);
	x28 = and(a4,x27);
	x29 = xor(x25,x28);
	x30 = not(x26);
	x31 = or(a6,x29);
	x32 = not(x31);
	x33 = and(a4,x32);
	x34 = xor(x30,x33);
	x35 = and(a3,x34);
	x36 = xor(x29,x35);
	out4 = x36;
	x37 = xor(x6,x34);
	x38 = and(a5,x23);
	x39 = xor(x38,x5);
	x40 = or(a4,x39);
	x41 = xor(x37,x40);
	x42 = or(x16,x24);
	x43 = xor(x42,x1);
	x44 = xor(x15,x24);
	x45 = xor(x44,x31);
	x46 = or(a4,x45);
	x47 = xor(x43,x46);
	x48 = or(a3,x47);
	x49 = xor(x41,x48);
	out1 = x49;
	x50 = or(x5,x38);
	x51 = xor(x50,x6);
	x52 = and(x8,x31);
	x53 = or(a4,x52);
	x54 = xor(x51,x53);
	x55 = and(x30,x43);
	x56 = or(a3,x55);
	x57 = xor(x54,x56);
	out3 = x57
tel


node sbox_7 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a2);
	x2 = not(a5);
	x3 = and(a2,a4);
	x4 = xor(x3,a5);
	x5 = xor(x4,a3);
	x6 = and(a4,x4);
	x7 = xor(x6,a2);
	x8 = and(a3,x7);
	x9 = xor(a1,x8);
	x10 = or(a6,x9);
	x11 = xor(x5,x10);
	x12 = and(a4,x2);
	x13 = or(x12,a2);
	x14 = or(a2,x2);
	x15 = and(a3,x14);
	x16 = xor(x13,x15);
	x17 = xor(x6,x11);
	x18 = or(a6,x17);
	x19 = xor(x16,x18);
	x20 = and(a1,x19);
	x21 = xor(x11,x20);
	out1 = x21;
	x22 = or(a2,x21);
	x23 = xor(x22,x6);
	x24 = xor(x23,x15);
	x25 = xor(x5,x6);
	x26 = or(x25,x12);
	x27 = or(a6,x26);
	x28 = xor(x24,x27);
	x29 = and(x1,x19);
	x30 = and(x23,x26);
	x31 = and(a6,x30);
	x32 = xor(x29,x31);
	x33 = or(a1,x32);
	x34 = xor(x28,x33);
	out4 = x34;
	x35 = and(a4,x16);
	x36 = or(x35,x1);
	x37 = and(a6,x36);
	x38 = xor(x11,x37);
	x39 = and(a4,x13);
	x40 = or(a3,x7);
	x41 = xor(x39,x40);
	x42 = or(x1,x24);
	x43 = or(a6,x42);
	x44 = xor(x41,x43);
	x45 = or(a1,x44);
	x46 = xor(x38,x45);
	out2 = x46;
	x47 = xor(x8,x44);
	x48 = xor(x6,x15);
	x49 = or(a6,x48);
	x50 = xor(x47,x49);
	x51 = xor(x19,x44);
	x52 = xor(a4,x25);
	x53 = and(x52,x46);
	x54 = and(a6,x53);
	x55 = xor(x51,x54);
	x56 = or(a1,x55);
	x57 = xor(x50,x56);
	out3 = x57
tel


node sbox_8 (a1:bool::_, a2:bool::_, a3:bool::_, a4:bool::_, a5:bool::_, a6:bool::_ )
     returns out1:bool::_, out2:bool::_, out3:bool::_, out4:bool::_
vars
let
    x1 = not(a1);
	x2 = not(a4);
	x3 = xor(a3,x1);
	x4 = or(a3,x1);
	x5 = xor(x4,x2);
	x6 = or(a5,x5);
	x7 = xor(x3,x6);
	x8 = or(x1,x5);
	x9 = xor(x2,x8);
	x10 = and(a5,x9);
	x11 = xor(x8,x10);
	x12 = and(a2,x11);
	x13 = xor(x7,x12);
	x14 = xor(x6,x9);
	x15 = and(x3,x9);
	x16 = and(a5,x8);
	x17 = xor(x15,x16);
	x18 = or(a2,x17);
	x19 = xor(x14,x18);
	x20 = or(a6,x19);
	x21 = xor(x13,x20);
	out1 = x21;
	x22 = or(a5,x3);
	x23 = and(x22,x2);
	x24 = not(a3);
	x25 = and(x24,x8);
	x26 = and(a5,x4);
	x27 = xor(x25,x26);
	x28 = or(a2,x27);
	x29 = xor(x23,x28);
	x30 = and(a6,x29);
	x31 = xor(x13,x30);
	out4 = x31;
	x32 = xor(x5,x6);
	x33 = xor(x32,x22);
	x34 = or(a4,x13);
	x35 = and(a2,x34);
	x36 = xor(x33,x35);
	x37 = and(a1,x33);
	x38 = xor(x37,x8);
	x39 = xor(a1,x23);
	x40 = and(x39,x7);
	x41 = and(a2,x40);
	x42 = xor(x38,x41);
	x43 = or(a6,x42);
	x44 = xor(x36,x43);
	out3 = x44;
	x45 = xor(a1,x10);
	x46 = xor(x45,x22);
	x47 = not(x7);
	x48 = and(x47,x8);
	x49 = or(a2,x48);
	x50 = xor(x46,x49);
	x51 = xor(x19,x29);
	x52 = or(x51,x38);
	x53 = and(a6,x52);
	x54 = xor(x50,x53);
	out2 = x54
tel

perm expand (a: uint_32::_) returns out:uint_48::_  {
     32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13,
     12, 13, 14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21,
     22, 23, 24, 25, 24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1
}

perm init_p (a:uint_64::_) returns out:uint_64::_ {
     58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4,
     62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8,
     57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3,
     61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7
}

perm final_p (a:uint_64::_) returns out:uint_64::_ {
     40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31,
     38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29,
     36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27,
     34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25
}

perm permut ( a:uint_32::_ ) returns out:uint_32::_ {
     16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10,
     2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25
}


perm[] roundkey (key : uint_64::_) returns roundkey : uint_48::_
[
    { 10, 51, 34, 60, 49, 17, 33, 57, 2, 9, 19, 42, 3, 35, 26, 25,
	  44, 58, 59, 1, 36, 27, 18, 41, 22, 28, 39, 54, 37, 4, 47, 30,
	  5, 53, 23, 29, 61, 21, 38, 63, 15, 20, 45, 14, 13, 62, 55, 31 } ;
      
    { 2, 43, 26, 52, 41, 9, 25, 49, 59, 1, 11, 34, 60, 27, 18, 17,
	36, 50, 51, 58, 57, 19, 10, 33, 14, 20, 31, 46, 29, 63, 39, 22,
	28, 45, 15, 21, 53, 13, 30, 55, 7, 12, 37, 6, 5, 54, 47, 23 } ;

    { 51, 27, 10, 36, 25, 58, 9, 33, 43, 50, 60, 18, 44, 11, 2, 1,
	49, 34, 35, 42, 41, 3, 59, 17, 61, 4, 15, 30, 13, 47, 23, 6,
	12, 29, 62, 5, 37, 28, 14, 39, 54, 63, 21, 53, 20, 38, 31, 7 } ;

    { 35, 11, 59, 49, 9, 42, 58, 17, 27, 34, 44, 2, 57, 60, 51, 50,
	33, 18, 19, 26, 25, 52, 43, 1, 45, 55, 62, 14, 28, 31, 7, 53,
	63, 13, 46, 20, 21, 12, 61, 23, 38, 47, 5, 37, 4, 22, 15, 54 } ;

    { 19, 60, 43, 33, 58, 26, 42, 1, 11, 18, 57, 51, 41, 44, 35, 34,
	17, 2, 3, 10, 9, 36, 27, 50, 29, 39, 46, 61, 12, 15, 54, 37,
	47, 28, 30, 4, 5, 63, 45, 7, 22, 31, 20, 21, 55, 6, 62, 38 } ;

    { 3, 44, 27, 17, 42, 10, 26, 50, 60, 2, 41, 35, 25, 57, 19, 18,
	1, 51, 52, 59, 58, 49, 11, 34, 13, 23, 30, 45, 63, 62, 38, 21,
	31, 12, 14, 55, 20, 47, 29, 54, 6, 15, 4, 5, 39, 53, 46, 22 } ;

    { 52, 57, 11, 1, 26, 59, 10, 34, 44, 51, 25, 19, 9, 41, 3, 2,
	50, 35, 36, 43, 42, 33, 60, 18, 28, 7, 14, 29, 47, 46, 22, 5,
	15, 63, 61, 39, 4, 31, 13, 38, 53, 62, 55, 20, 23, 37, 30, 6 } ;

    { 36, 41, 60, 50, 10, 43, 59, 18, 57, 35, 9, 3, 58, 25, 52, 51,
	34, 19, 49, 27, 26, 17, 44, 2, 12, 54, 61, 13, 31, 30, 6, 20,
	62, 47, 45, 23, 55, 15, 28, 22, 37, 46, 39, 4, 7, 21, 14, 53 } ;

    { 57, 33, 52, 42, 2, 35, 51, 10, 49, 27, 1, 60, 50, 17, 44, 43,
	26, 11, 41, 19, 18, 9, 36, 59, 4, 46, 53, 5, 23, 22, 61, 12,
	54, 39, 37, 15, 47, 7, 20, 14, 29, 38, 31, 63, 62, 13, 6, 45 } ;

    { 41, 17, 36, 26, 51, 19, 35, 59, 33, 11, 50, 44, 34, 1, 57, 27,
	10, 60, 25, 3, 2, 58, 49, 43, 55, 30, 37, 20, 7, 6, 45, 63,
	38, 23, 21, 62, 31, 54, 4, 61, 13, 22, 15, 47, 46, 28, 53, 29 } ;

    { 25, 1, 49, 10, 35, 3, 19, 43, 17, 60, 34, 57, 18, 50, 41, 11,
	59, 44, 9, 52, 51, 42, 33, 27, 39, 14, 21, 4, 54, 53, 29, 47,
	22, 7, 5, 46, 15, 38, 55, 45, 28, 6, 62, 31, 30, 12, 37, 13 } ;

    { 9, 50, 33, 59, 19, 52, 3, 27, 1, 44, 18, 41, 2, 34, 25, 60,
	43, 57, 58, 36, 35, 26, 17, 11, 23, 61, 5, 55, 38, 37, 13, 31,
	6, 54, 20, 30, 62, 22, 39, 29, 12, 53, 46, 15, 14, 63, 21, 28 } ;

    { 58, 34, 17, 43, 3, 36, 52, 11, 50, 57, 2, 25, 51, 18, 9, 44,
	27, 41, 42, 49, 19, 10, 1, 60, 7, 45, 20, 39, 22, 21, 28, 15,
	53, 38, 4, 14, 46, 6, 23, 13, 63, 37, 30, 62, 61, 47, 5, 12 } ;

    { 42, 18, 1, 27, 52, 49, 36, 60, 34, 41, 51, 9, 35, 2, 58, 57,
	11, 25, 26, 33, 3, 59, 50, 44, 54, 29, 4, 23, 6, 5, 12, 62,
	37, 22, 55, 61, 30, 53, 7, 28, 47, 21, 14, 46, 45, 31, 20, 63 } ;

    { 26, 2, 50, 11, 36, 33, 49, 44, 18, 25, 35, 58, 19, 51, 42, 41,
	60, 9, 10, 17, 52, 43, 34, 57, 38, 13, 55, 7, 53, 20, 63, 46,
	21, 6, 39, 45, 14, 37, 54, 12, 31, 5, 61, 30, 29, 15, 4, 47 } ;

    { 18, 59, 42, 3, 57, 25, 41, 36, 10, 17, 27, 50, 11, 43, 34, 33,
	52, 1, 2, 9, 44, 35, 26, 49, 30, 5, 47, 62, 45, 12, 55, 38,
	13, 61, 31, 37, 6, 29, 46, 4, 23, 28, 53, 22, 21, 7, 63, 39 } 
]


node<i> des_single (left_in : uint_32::_, right_in : uint_32::_, key : uint_64::_)
        returns left_out : uint_32::_, right_out : uint_32::_, key : uint_64::_
vars
    s1 : uint_6::_, s2 : uint_6::_, s3 : uint_6::_, s4 : uint_6::_,
    s5 : uint_6::_, s6 : uint_6::_, s7 : uint_6::_, s8 : uint_6::_,
    c : uint_32::_
let
    # Xoring key and R
    (s1,s2,s3,s4,s5,s6,s7,s8)
          = xor(expand(right_in), roundkey[i](key));

    # Sboxes (and permutation)
    c = permut( sbox_1(s1), sbox_2(s2), sbox_3(s3), sbox_4(s4),
                sbox_5(s5), sbox_6(s6), sbox_7(s7), sbox_8(s8) );
                
    (left_out,right_out) = (right_in,xor(left_in,c))
tel

node des (plaintext : uint_64::_, key : uint_64::_) returns ciphered : uint_64::_
vars
    left  : uint_32[17]::_,
    right : uint_32[17]::_,
    key_tmp : uint_64[17]::_
let
    (left,right,key_tmp) = fill_i<des_single;17>(init_p(plaintext),key);

    # Regrouping left and right and computing final permuation
    ciphered = final_p(right[17], left[17])    
tel
