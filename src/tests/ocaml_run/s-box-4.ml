open Ocaml_runtime
let sbox_4 a = 
    let x1 = lnot (a1) in 
    let x2 = lnot (a3) in 
    let x3 = (a3) lor (a1) in 
    let x4 = (x3) land (a5) in 
    let x5 = (x4) lxor (x1) in 
    let x6 = (a3) lor (a2) in 
    let x7 = (x6) lxor (x5) in 
    let x8 = (a5) land (a1) in 
    let x9 = (x3) lxor (x8) in 
    let x10 = (x9) land (a2) in 
    let x11 = (x10) lxor (a5) in 
    let x12 = (x11) land (a4) in 
    let x13 = (x12) lxor (x7) in 
    let x14 = (x4) lxor (x2) in 
    let x15 = (x14) land (a2) in 
    let x16 = (x15) lxor (x9) in 
    let x17 = (x14) land (x5) in 
    let x18 = (x2) lxor (a5) in 
    let x19 = (x18) lor (a2) in 
    let x20 = (x19) lxor (x17) in 
    let x21 = (x20) lor (a4) in 
    let x22 = (x21) lxor (x16) in 
    let x23 = (x22) land (a6) in 
    let x24 = (x23) lxor (x13) in 
    let out2 = x24 in 
    let x25 = lnot (x13) in 
    let x26 = (x22) lor (a6) in 
    let x27 = (x26) lxor (x25) in 
    let out1 = x27 in 
    let x28 = (x11) land (a2) in 
    let x29 = (x17) lxor (x28) in 
    let x30 = (x10) lxor (a3) in 
    let x31 = (x19) lxor (x30) in 
    let x32 = (x31) land (a4) in 
    let x33 = (x32) lxor (x29) in 
    let x34 = (x33) lxor (x25) in 
    let x35 = (x34) land (a2) in 
    let x36 = (x35) lxor (x24) in 
    let x37 = (x34) lor (a4) in 
    let x38 = (x37) lxor (x36) in 
    let x39 = (x38) land (a6) in 
    let x40 = (x39) lxor (x33) in 
    let out4 = x40 in 
    let x41 = (x38) lxor (x26) in 
    let x42 = (x40) lxor (x41) in 
    let out3 = x42 in 
    (out)
